

Microchip Technology PIC LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Apr 23 23:09:23 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0015                     	;# 
    43  0016                     	;# 
    44  0016                     	;# 
    45  0017                     	;# 
    46  0018                     	;# 
    47  0019                     	;# 
    48  001A                     	;# 
    49  001B                     	;# 
    50  001C                     	;# 
    51  001E                     	;# 
    52  001F                     	;# 
    53  008C                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0095                     	;# 
    57  0096                     	;# 
    58  0097                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009A                     	;# 
    62  009B                     	;# 
    63  009B                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  010C                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0115                     	;# 
    71  0116                     	;# 
    72  0117                     	;# 
    73  0118                     	;# 
    74  0119                     	;# 
    75  011A                     	;# 
    76  011B                     	;# 
    77  011D                     	;# 
    78  011D                     	;# 
    79  018C                     	;# 
    80  0191                     	;# 
    81  0191                     	;# 
    82  0192                     	;# 
    83  0193                     	;# 
    84  0193                     	;# 
    85  0193                     	;# 
    86  0194                     	;# 
    87  0195                     	;# 
    88  0196                     	;# 
    89  0199                     	;# 
    90  019A                     	;# 
    91  019B                     	;# 
    92  019B                     	;# 
    93  019B                     	;# 
    94  019B                     	;# 
    95  019C                     	;# 
    96  019C                     	;# 
    97  019D                     	;# 
    98  019E                     	;# 
    99  019F                     	;# 
   100  020C                     	;# 
   101  0211                     	;# 
   102  0211                     	;# 
   103  0212                     	;# 
   104  0212                     	;# 
   105  0213                     	;# 
   106  0213                     	;# 
   107  0214                     	;# 
   108  0214                     	;# 
   109  0215                     	;# 
   110  0215                     	;# 
   111  0215                     	;# 
   112  0216                     	;# 
   113  0216                     	;# 
   114  0217                     	;# 
   115  0217                     	;# 
   116  0291                     	;# 
   117  0291                     	;# 
   118  0292                     	;# 
   119  0293                     	;# 
   120  0294                     	;# 
   121  0295                     	;# 
   122  0295                     	;# 
   123  0296                     	;# 
   124  0391                     	;# 
   125  0392                     	;# 
   126  0393                     	;# 
   127  039A                     	;# 
   128  039C                     	;# 
   129  039D                     	;# 
   130  039E                     	;# 
   131  039F                     	;# 
   132  0FE4                     	;# 
   133  0FE5                     	;# 
   134  0FE6                     	;# 
   135  0FE7                     	;# 
   136  0FE8                     	;# 
   137  0FE9                     	;# 
   138  0FEA                     	;# 
   139  0FEB                     	;# 
   140  0FED                     	;# 
   141  0FEE                     	;# 
   142  0FEF                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  008C                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0097                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  0111                     	;# 
   185  0112                     	;# 
   186  0115                     	;# 
   187  0116                     	;# 
   188  0117                     	;# 
   189  0118                     	;# 
   190  0119                     	;# 
   191  011A                     	;# 
   192  011B                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  018C                     	;# 
   196  0191                     	;# 
   197  0191                     	;# 
   198  0192                     	;# 
   199  0193                     	;# 
   200  0193                     	;# 
   201  0193                     	;# 
   202  0194                     	;# 
   203  0195                     	;# 
   204  0196                     	;# 
   205  0199                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  019C                     	;# 
   213  019D                     	;# 
   214  019E                     	;# 
   215  019F                     	;# 
   216  020C                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0295                     	;# 
   238  0295                     	;# 
   239  0296                     	;# 
   240  0391                     	;# 
   241  0392                     	;# 
   242  0393                     	;# 
   243  039A                     	;# 
   244  039C                     	;# 
   245  039D                     	;# 
   246  039E                     	;# 
   247  039F                     	;# 
   248  0FE4                     	;# 
   249  0FE5                     	;# 
   250  0FE6                     	;# 
   251  0FE7                     	;# 
   252  0FE8                     	;# 
   253  0FE9                     	;# 
   254  0FEA                     	;# 
   255  0FEB                     	;# 
   256  0FED                     	;# 
   257  0FEE                     	;# 
   258  0FEF                     	;# 
   259  0000                     	;# 
   260  0001                     	;# 
   261  0002                     	;# 
   262  0003                     	;# 
   263  0004                     	;# 
   264  0005                     	;# 
   265  0006                     	;# 
   266  0007                     	;# 
   267  0008                     	;# 
   268  0009                     	;# 
   269  000A                     	;# 
   270  000B                     	;# 
   271  000C                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0016                     	;# 
   277  0017                     	;# 
   278  0018                     	;# 
   279  0019                     	;# 
   280  001A                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001E                     	;# 
   284  001F                     	;# 
   285  008C                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  010C                     	;# 
   300  0111                     	;# 
   301  0112                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011D                     	;# 
   310  011D                     	;# 
   311  018C                     	;# 
   312  0191                     	;# 
   313  0191                     	;# 
   314  0192                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0194                     	;# 
   319  0195                     	;# 
   320  0196                     	;# 
   321  0199                     	;# 
   322  019A                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019C                     	;# 
   328  019C                     	;# 
   329  019D                     	;# 
   330  019E                     	;# 
   331  019F                     	;# 
   332  020C                     	;# 
   333  0211                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0212                     	;# 
   337  0213                     	;# 
   338  0213                     	;# 
   339  0214                     	;# 
   340  0214                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0215                     	;# 
   344  0216                     	;# 
   345  0216                     	;# 
   346  0217                     	;# 
   347  0217                     	;# 
   348  0291                     	;# 
   349  0291                     	;# 
   350  0292                     	;# 
   351  0293                     	;# 
   352  0294                     	;# 
   353  0295                     	;# 
   354  0295                     	;# 
   355  0296                     	;# 
   356  0391                     	;# 
   357  0392                     	;# 
   358  0393                     	;# 
   359  039A                     	;# 
   360  039C                     	;# 
   361  039D                     	;# 
   362  039E                     	;# 
   363  039F                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  008C                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0097                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009B                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  010C                     	;# 
   416  0111                     	;# 
   417  0112                     	;# 
   418  0115                     	;# 
   419  0116                     	;# 
   420  0117                     	;# 
   421  0118                     	;# 
   422  0119                     	;# 
   423  011A                     	;# 
   424  011B                     	;# 
   425  011D                     	;# 
   426  011D                     	;# 
   427  018C                     	;# 
   428  0191                     	;# 
   429  0191                     	;# 
   430  0192                     	;# 
   431  0193                     	;# 
   432  0193                     	;# 
   433  0193                     	;# 
   434  0194                     	;# 
   435  0195                     	;# 
   436  0196                     	;# 
   437  0199                     	;# 
   438  019A                     	;# 
   439  019B                     	;# 
   440  019B                     	;# 
   441  019B                     	;# 
   442  019B                     	;# 
   443  019C                     	;# 
   444  019C                     	;# 
   445  019D                     	;# 
   446  019E                     	;# 
   447  019F                     	;# 
   448  020C                     	;# 
   449  0211                     	;# 
   450  0211                     	;# 
   451  0212                     	;# 
   452  0212                     	;# 
   453  0213                     	;# 
   454  0213                     	;# 
   455  0214                     	;# 
   456  0214                     	;# 
   457  0215                     	;# 
   458  0215                     	;# 
   459  0215                     	;# 
   460  0216                     	;# 
   461  0216                     	;# 
   462  0217                     	;# 
   463  0217                     	;# 
   464  0291                     	;# 
   465  0291                     	;# 
   466  0292                     	;# 
   467  0293                     	;# 
   468  0294                     	;# 
   469  0295                     	;# 
   470  0295                     	;# 
   471  0296                     	;# 
   472  0391                     	;# 
   473  0392                     	;# 
   474  0393                     	;# 
   475  039A                     	;# 
   476  039C                     	;# 
   477  039D                     	;# 
   478  039E                     	;# 
   479  039F                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0015                     	;# 
   507  0016                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  001E                     	;# 
   516  001F                     	;# 
   517  008C                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0095                     	;# 
   521  0096                     	;# 
   522  0097                     	;# 
   523  0098                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009B                     	;# 
   528  009C                     	;# 
   529  009D                     	;# 
   530  009E                     	;# 
   531  010C                     	;# 
   532  0111                     	;# 
   533  0112                     	;# 
   534  0115                     	;# 
   535  0116                     	;# 
   536  0117                     	;# 
   537  0118                     	;# 
   538  0119                     	;# 
   539  011A                     	;# 
   540  011B                     	;# 
   541  011D                     	;# 
   542  011D                     	;# 
   543  018C                     	;# 
   544  0191                     	;# 
   545  0191                     	;# 
   546  0192                     	;# 
   547  0193                     	;# 
   548  0193                     	;# 
   549  0193                     	;# 
   550  0194                     	;# 
   551  0195                     	;# 
   552  0196                     	;# 
   553  0199                     	;# 
   554  019A                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019B                     	;# 
   559  019C                     	;# 
   560  019C                     	;# 
   561  019D                     	;# 
   562  019E                     	;# 
   563  019F                     	;# 
   564  020C                     	;# 
   565  0211                     	;# 
   566  0211                     	;# 
   567  0212                     	;# 
   568  0212                     	;# 
   569  0213                     	;# 
   570  0213                     	;# 
   571  0214                     	;# 
   572  0214                     	;# 
   573  0215                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0216                     	;# 
   577  0216                     	;# 
   578  0217                     	;# 
   579  0217                     	;# 
   580  0291                     	;# 
   581  0291                     	;# 
   582  0292                     	;# 
   583  0293                     	;# 
   584  0294                     	;# 
   585  0295                     	;# 
   586  0295                     	;# 
   587  0296                     	;# 
   588  0391                     	;# 
   589  0392                     	;# 
   590  0393                     	;# 
   591  039A                     	;# 
   592  039C                     	;# 
   593  039D                     	;# 
   594  039E                     	;# 
   595  039F                     	;# 
   596  0FE4                     	;# 
   597  0FE5                     	;# 
   598  0FE6                     	;# 
   599  0FE7                     	;# 
   600  0FE8                     	;# 
   601  0FE9                     	;# 
   602  0FEA                     	;# 
   603  0FEB                     	;# 
   604  0FED                     	;# 
   605  0FEE                     	;# 
   606  0FEF                     	;# 
   607                           
   608                           	psect	idataCOMMON
   609  00F8                     __pidataCOMMON:	
   610                           
   611                           ;initializer for TMR2_DefaultInterruptHandler@CountBlink
   612  00F8  340A               	retlw	10
   613  00F9  3400               	retlw	0
   614                           
   615                           ;initializer for TMR2_DefaultInterruptHandler@CountPiHalted
   616  00FA  3450               	retlw	80
   617  00FB  3400               	retlw	0
   618                           
   619                           	psect	idataBANK0
   620  0103                     __pidataBANK0:	
   621                           
   622                           ;initializer for TMR2_DefaultInterruptHandler@CountButtonPressed
   623  0103  3404               	retlw	4
   624  0104  3400               	retlw	0
   625                           
   626                           	psect	nvBANK0
   627  0020                     __pnvBANK0:	
   628  0020                     _TMR2_InterruptHandler:	
   629  0020                     	ds	2
   630  000B                     _INTCONbits	set	11
   631  0011                     _PIR1bits	set	17
   632  001B                     _PR2	set	27
   633  001C                     _T2CON	set	28
   634  001C                     _T2CONbits	set	28
   635  001A                     _TMR2	set	26
   636  0060                     _RA0	set	96
   637  0061                     _RA1	set	97
   638  0062                     _RA2	set	98
   639  0095                     _OPTION_REGbits	set	149
   640  0099                     _OSCCON	set	153
   641  009A                     _OSCSTAT	set	154
   642  0098                     _OSCTUNE	set	152
   643  0091                     _PIE1bits	set	145
   644  008C                     _TRISA	set	140
   645  011D                     _APFCON	set	285
   646  010C                     _LATA	set	268
   647  0861                     _LATA1	set	2145
   648  0864                     _LATA4	set	2148
   649  0865                     _LATA5	set	2149
   650  018C                     _ANSELA	set	396
   651  020C                     _WPUA	set	524
   652  1C98                     _IOCAF0	set	7320
   653  1C9A                     _IOCAF2	set	7322
   654  1C90                     _IOCAN0	set	7312
   655  1C8A                     _IOCAP2	set	7306
   656                           
   657                           ; #config settings
   658  0000                     
   659                           	psect	cinit
   660  001C                     start_initialization:	
   661  001C                     __initialization:	
   662                           
   663                           ; Clear objects allocated to COMMON
   664  001C  01F0               	clrf	__pbssCOMMON& (0+127)
   665  001D  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   666  001E  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   667  001F  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   668  0020  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   669                           
   670                           ; Initialize objects allocated to COMMON
   671  0021  20F8               	fcall	__pidataCOMMON	;fetch initializer
   672  0022  00F5               	movwf	__pdataCOMMON& (0+127)
   673  0023  20F9               	fcall	__pidataCOMMON+1	;fetch initializer
   674  0024  00F6               	movwf	(__pdataCOMMON+1)& (0+127)
   675  0025  20FA               	fcall	__pidataCOMMON+2	;fetch initializer
   676  0026  00F7               	movwf	(__pdataCOMMON+2)& (0+127)
   677  0027  20FB               	fcall	__pidataCOMMON+3	;fetch initializer
   678  0028  00F8               	movwf	(__pdataCOMMON+3)& (0+127)
   679                           
   680                           ; Initialize objects allocated to BANK0
   681  0029  2103               	fcall	__pidataBANK0	;fetch initializer
   682  002A  00A2               	movwf	__pdataBANK0& (0+127)
   683  002B  2104               	fcall	__pidataBANK0+1	;fetch initializer
   684  002C  00A3               	movwf	(__pdataBANK0+1)& (0+127)
   685  002D                     end_of_initialization:	
   686                           ;End of C runtime variable initialization code
   687                           
   688  002D                     __end_of__initialization:	
   689  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   690  002E  0020               	movlb	0
   691  002F  28DD               	ljmp	_main	;jump to C main() function
   692                           
   693                           	psect	bssCOMMON
   694  0070                     __pbssCOMMON:	
   695  0070                     TMR2_ISR@CountCallBack:	
   696  0070                     	ds	2
   697  0072                     _ButtonPushed:	
   698  0072                     	ds	1
   699  0073                     _PiHalted:	
   700  0073                     	ds	1
   701  0074                     _PowerDown:	
   702  0074                     	ds	1
   703                           
   704                           	psect	dataCOMMON
   705  0075                     __pdataCOMMON:	
   706  0075                     TMR2_DefaultInterruptHandler@CountBlink:	
   707  0075                     	ds	2
   708  0077                     TMR2_DefaultInterruptHandler@CountPiHalted:	
   709  0077                     	ds	2
   710                           
   711                           	psect	dataBANK0
   712  0022                     __pdataBANK0:	
   713  0022                     TMR2_DefaultInterruptHandler@CountButtonPressed:	
   714  0022                     	ds	2
   715                           
   716                           	psect	cstackCOMMON
   717  0079                     __pcstackCOMMON:	
   718  0079                     ?_TMR2_DefaultInterruptHandler:	
   719  0079                     ??_TMR2_DefaultInterruptHandler:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0079                     ?_TMR2_StartTimer:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0079                     ?_TMR2_CallBack:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0079                     ??_TMR2_CallBack:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0079                     ?_PIN_MANAGER_IOC:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0079                     ??_PIN_MANAGER_IOC:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0079                     ?_PIN_MANAGER_Initialize:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0079                     ?_OSCILLATOR_Initialize:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0079                     ?_TMR2_Initialize:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0079                     ?_TMR2_LoadPeriodRegister:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0079                     ??_TMR2_LoadPeriodRegister:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0079                     ?_TMR2_ISR:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0079                     ?_INTERRUPT_InterruptManager:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0079                     ?_SYSTEM_Initialize:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0079                     ?_main:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0079                     TMR2_LoadPeriodRegister@periodVal:	
   765                           ; 1 bytes @ 0x0
   766                           
   767                           
   768                           ; 1 bytes @ 0x0
   769  0079                     	ds	1
   770  007A                     ??_TMR2_ISR:	
   771  007A                     ??_INTERRUPT_InterruptManager:	
   772                           ; 1 bytes @ 0x1
   773                           
   774                           
   775                           ; 1 bytes @ 0x1
   776  007A                     	ds	1
   777  007B                     ??_TMR2_SetInterruptHandler:	
   778  007B                     ??_TMR2_StartTimer:	
   779                           ; 1 bytes @ 0x2
   780                           
   781  007B                     ??_PIN_MANAGER_Initialize:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  007B                     ??_OSCILLATOR_Initialize:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  007B                     ??_TMR2_Initialize:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  007B                     ??_SYSTEM_Initialize:	
   791                           ; 1 bytes @ 0x2
   792                           
   793  007B                     ??_main:	
   794                           ; 1 bytes @ 0x2
   795                           
   796                           
   797                           	psect	cstackBANK0
   798  0024                     __pcstackBANK0:	
   799                           ; 1 bytes @ 0x2
   800                           
   801  0024                     ?_TMR2_SetInterruptHandler:	
   802  0024                     TMR2_SetInterruptHandler@InterruptHandler:	
   803                           ; 1 bytes @ 0x0
   804                           
   805                           
   806                           ; 2 bytes @ 0x0
   807  0024                     	ds	2
   808                           
   809                           	psect	maintext
   810  00DD                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 53 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B1F/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1
   830 ;;      Params:         0       0       0
   831 ;;      Locals:         0       0       0
   832 ;;      Temps:          0       0       0
   833 ;;      Totals:         0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels required when called:    7
   836 ;; This function calls:
   837 ;;		_SYSTEM_Initialize
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  00DD                     _main:	
   846                           
   847                           ;main.c: 55: SYSTEM_Initialize();
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   851  00DD  20FC               	fcall	_SYSTEM_Initialize
   852                           
   853                           ;main.c: 58: (INTCONbits.GIE = 1);
   854  00DE  178B               	bsf	11,7	;volatile
   855                           
   856                           ;main.c: 61: (INTCONbits.PEIE = 1);
   857  00DF  170B               	bsf	11,6	;volatile
   858  00E0                     l917:	
   859                           ;main.c: 63: while (!PowerDown) {
   860                           
   861  00E0  0874               	movf	_PowerDown,w
   862  00E1  1903               	btfsc	3,2
   863  00E2  28E0               	goto	l917
   864                           
   865                           ;main.c: 65: }
   866                           ;main.c: 68: (INTCONbits.GIE = 0);
   867  00E3  138B               	bcf	11,7	;volatile
   868                           
   869                           ;main.c: 70: do { LATA5 = 0; } while(0);
   870  00E4  0022               	movlb	2	; select bank2
   871  00E5  128C               	bcf	12,5	;volatile
   872  00E6                     l200:	
   873                           ;main.c: 72: while (1) {
   874                           
   875  00E6  28E6               	goto	l200
   876  00E7                     __end_of_main:	
   877                           
   878                           	psect	text1
   879  00FC                     __ptext1:	
   880 ;; *************** function _SYSTEM_Initialize *****************
   881 ;; Defined at:
   882 ;;		line 70 in file "mcc_generated_files/mcc.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;		None
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, pclath, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1
   896 ;;      Params:         0       0       0
   897 ;;      Locals:         0       0       0
   898 ;;      Temps:          0       0       0
   899 ;;      Totals:         0       0       0
   900 ;;Total ram usage:        0 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    6
   903 ;; This function calls:
   904 ;;		_OSCILLATOR_Initialize
   905 ;;		_PIN_MANAGER_Initialize
   906 ;;		_TMR2_Initialize
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _SYSTEM_Initialize
   914  00FC                     _SYSTEM_Initialize:	
   915                           
   916                           ;mcc.c: 73: PIN_MANAGER_Initialize();
   917                           
   918                           ;incstack = 0
   919                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   920  00FC  209B               	fcall	_PIN_MANAGER_Initialize
   921                           
   922                           ;mcc.c: 74: OSCILLATOR_Initialize();
   923  00FD  20ED               	fcall	_OSCILLATOR_Initialize
   924                           
   925                           ;mcc.c: 75: TMR2_Initialize();
   926  00FE  20C1               	fcall	_TMR2_Initialize
   927  00FF  0008               	return
   928  0100                     __end_of_SYSTEM_Initialize:	
   929                           
   930                           	psect	text2
   931  00C1                     __ptext2:	
   932 ;; *************** function _TMR2_Initialize *****************
   933 ;; Defined at:
   934 ;;		line 60 in file "mcc_generated_files/tmr2.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1
   948 ;;      Params:         0       0       0
   949 ;;      Locals:         0       0       0
   950 ;;      Temps:          0       0       0
   951 ;;      Totals:         0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    5
   955 ;; This function calls:
   956 ;;		_TMR2_SetInterruptHandler
   957 ;;		_TMR2_StartTimer
   958 ;; This function is called by:
   959 ;;		_SYSTEM_Initialize
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _TMR2_Initialize
   965  00C1                     _TMR2_Initialize:	
   966                           
   967                           ;tmr2.c: 64: T2CON = 0x02;
   968                           
   969                           ;incstack = 0
   970                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
   971  00C1  3002               	movlw	2
   972  00C2  0020               	movlb	0	; select bank0
   973  00C3  009C               	movwf	28	;volatile
   974                           
   975                           ;tmr2.c: 67: PR2 = 0xFF;
   976  00C4  30FF               	movlw	255
   977  00C5  009B               	movwf	27	;volatile
   978                           
   979                           ;tmr2.c: 70: TMR2 = 0x00;
   980  00C6  019A               	clrf	26	;volatile
   981                           
   982                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
   983  00C7  1091               	bcf	17,1	;volatile
   984                           
   985                           ;tmr2.c: 76: PIE1bits.TMR2IE = 1;
   986  00C8  0021               	movlb	1	; select bank1
   987  00C9  1491               	bsf	17,1	;volatile
   988                           
   989                           ;tmr2.c: 79: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
   990  00CA  3030               	movlw	low _TMR2_DefaultInterruptHandler
   991  00CB  0020               	movlb	0	; select bank0
   992  00CC  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
   993  00CD  3000               	movlw	high _TMR2_DefaultInterruptHandler
   994  00CE  00A5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
   995  00CF  20E7               	fcall	_TMR2_SetInterruptHandler
   996                           
   997                           ;tmr2.c: 82: TMR2_StartTimer();
   998  00D0  2100               	fcall	_TMR2_StartTimer
   999  00D1  0008               	return
  1000  00D2                     __end_of_TMR2_Initialize:	
  1001                           
  1002                           	psect	text3
  1003  0100                     __ptext3:	
  1004 ;; *************** function _TMR2_StartTimer *****************
  1005 ;; Defined at:
  1006 ;;		line 85 in file "mcc_generated_files/tmr2.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		None
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1
  1020 ;;      Params:         0       0       0
  1021 ;;      Locals:         0       0       0
  1022 ;;      Temps:          0       0       0
  1023 ;;      Totals:         0       0       0
  1024 ;;Total ram usage:        0 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    4
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_TMR2_Initialize
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           
  1035                           ;psect for function _TMR2_StartTimer
  1036  0100                     _TMR2_StartTimer:	
  1037                           
  1038                           ;tmr2.c: 87: T2CONbits.TMR2ON = 1;
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in _TMR2_StartTimer: []
  1042  0100  0020               	movlb	0	; select bank0
  1043  0101  151C               	bsf	28,2	;volatile
  1044  0102  0008               	return
  1045  0103                     __end_of_TMR2_StartTimer:	
  1046                           
  1047                           	psect	text4
  1048  00E7                     __ptext4:	
  1049 ;; *************** function _TMR2_SetInterruptHandler *****************
  1050 ;; Defined at:
  1051 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  InterruptHan    2    0[BANK0 ] PTR void 
  1054 ;;		 -> TMR2_DefaultInterruptHandler(1), 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1
  1066 ;;      Params:         0       2       0
  1067 ;;      Locals:         0       0       0
  1068 ;;      Temps:          0       0       0
  1069 ;;      Totals:         0       2       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    4
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_TMR2_Initialize
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _TMR2_SetInterruptHandler
  1082  00E7                     _TMR2_SetInterruptHandler:	
  1083                           
  1084                           ;tmr2.c: 120: TMR2_InterruptHandler = InterruptHandler;
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  1088  00E7  0020               	movlb	0	; select bank0
  1089  00E8  0825               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  1090  00E9  00A1               	movwf	_TMR2_InterruptHandler+1
  1091  00EA  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  1092  00EB  00A0               	movwf	_TMR2_InterruptHandler
  1093  00EC  0008               	return
  1094  00ED                     __end_of_TMR2_SetInterruptHandler:	
  1095                           
  1096                           	psect	text5
  1097  009B                     __ptext5:	
  1098 ;; *************** function _PIN_MANAGER_Initialize *****************
  1099 ;; Defined at:
  1100 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1
  1114 ;;      Params:         0       0       0
  1115 ;;      Locals:         0       0       0
  1116 ;;      Temps:          0       0       0
  1117 ;;      Totals:         0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    4
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_SYSTEM_Initialize
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function _PIN_MANAGER_Initialize
  1130  009B                     _PIN_MANAGER_Initialize:	
  1131                           
  1132                           ;pin_manager.c: 51: LATA = 0x22;
  1133                           
  1134                           ;incstack = 0
  1135                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1136  009B  3022               	movlw	34
  1137  009C  0022               	movlb	2	; select bank2
  1138  009D  008C               	movwf	12	;volatile
  1139                           
  1140                           ;pin_manager.c: 52: ANSELA = 0x0;
  1141  009E  0023               	movlb	3	; select bank3
  1142  009F  018C               	clrf	12	;volatile
  1143                           
  1144                           ;pin_manager.c: 53: WPUA = 0x8;
  1145  00A0  3008               	movlw	8
  1146  00A1  0024               	movlb	4	; select bank4
  1147  00A2  008C               	movwf	12	;volatile
  1148                           
  1149                           ;pin_manager.c: 54: TRISA = 0xD;
  1150  00A3  300D               	movlw	13
  1151  00A4  0021               	movlb	1	; select bank1
  1152  00A5  008C               	movwf	12	;volatile
  1153                           
  1154                           ;pin_manager.c: 56: OPTION_REGbits.nWPUEN = 0x0;
  1155  00A6  1395               	bcf	21,7	;volatile
  1156                           
  1157                           ;pin_manager.c: 57: APFCON = 0x00;
  1158  00A7  0022               	movlb	2	; select bank2
  1159  00A8  019D               	clrf	29	;volatile
  1160                           
  1161                           ;pin_manager.c: 60: IOCAP2 = 1;
  1162  00A9  0027               	movlb	7	; select bank7
  1163  00AA  1511               	bsf	17,2	;volatile
  1164                           
  1165                           ;pin_manager.c: 61: IOCAN0 = 1;
  1166  00AB  1412               	bsf	18,0	;volatile
  1167                           
  1168                           ;pin_manager.c: 63: INTCONbits.IOCIE = 1;
  1169  00AC  158B               	bsf	11,3	;volatile
  1170  00AD  0008               	return
  1171  00AE                     __end_of_PIN_MANAGER_Initialize:	
  1172                           
  1173                           	psect	text6
  1174  00ED                     __ptext6:	
  1175 ;; *************** function _OSCILLATOR_Initialize *****************
  1176 ;; Defined at:
  1177 ;;		line 78 in file "mcc_generated_files/mcc.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1
  1191 ;;      Params:         0       0       0
  1192 ;;      Locals:         0       0       0
  1193 ;;      Temps:          0       0       0
  1194 ;;      Totals:         0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    4
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_SYSTEM_Initialize
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _OSCILLATOR_Initialize
  1207  00ED                     _OSCILLATOR_Initialize:	
  1208                           
  1209                           ;mcc.c: 81: OSCCON = 0x58;
  1210                           
  1211                           ;incstack = 0
  1212                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  1213  00ED  3058               	movlw	88
  1214  00EE  0021               	movlb	1	; select bank1
  1215  00EF  0099               	movwf	25	;volatile
  1216                           
  1217                           ;mcc.c: 83: OSCSTAT = 0x00;
  1218  00F0  019A               	clrf	26	;volatile
  1219                           
  1220                           ;mcc.c: 85: OSCTUNE = 0x00;
  1221  00F1  0198               	clrf	24	;volatile
  1222  00F2  0008               	return
  1223  00F3                     __end_of_OSCILLATOR_Initialize:	
  1224                           
  1225                           	psect	intentry
  1226  0004                     __pintentry:	
  1227 ;; *************** function _INTERRUPT_InterruptManager *****************
  1228 ;; Defined at:
  1229 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, pclath, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1
  1243 ;;      Params:         0       0       0
  1244 ;;      Locals:         0       0       0
  1245 ;;      Temps:          1       0       0
  1246 ;;      Totals:         1       0       0
  1247 ;;Total ram usage:        1 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    3
  1250 ;; This function calls:
  1251 ;;		_PIN_MANAGER_IOC
  1252 ;;		_TMR2_ISR
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258  0004                     _INTERRUPT_InterruptManager:	
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  1262  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1263  0005  3180               	pagesel	$
  1264  0006  0020               	movlb	0	; select bank0
  1265  0007  087F               	movf	127,w
  1266  0008  00FA               	movwf	??_INTERRUPT_InterruptManager
  1267                           
  1268                           ;interrupt_manager.c: 55: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  1269  0009  0021               	movlb	1	; select bank1
  1270  000A  1C91               	btfss	17,1	;volatile
  1271  000B  2811               	goto	i1l110
  1272  000C  0020               	movlb	0	; select bank0
  1273  000D  1C91               	btfss	17,1	;volatile
  1274  000E  2811               	goto	i1l110
  1275                           
  1276                           ;interrupt_manager.c: 56: {
  1277                           ;interrupt_manager.c: 57: TMR2_ISR();
  1278  000F  20AE               	fcall	_TMR2_ISR
  1279                           
  1280                           ;interrupt_manager.c: 58: }
  1281  0010  2816               	goto	i1l114
  1282  0011                     i1l110:	
  1283                           
  1284                           ;interrupt_manager.c: 59: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  1285  0011  198B               	btfsc	11,3	;volatile
  1286  0012  1C0B               	btfss	11,0	;volatile
  1287  0013  2816               	goto	i1l114
  1288                           
  1289                           ;interrupt_manager.c: 60: {
  1290                           ;interrupt_manager.c: 61: PIN_MANAGER_IOC();
  1291  0014  2084               	fcall	_PIN_MANAGER_IOC
  1292                           
  1293                           ;interrupt_manager.c: 64: INTCONbits.IOCIF = 0;
  1294  0015  100B               	bcf	11,0	;volatile
  1295  0016                     i1l114:	
  1296                           ;interrupt_manager.c: 66: else
  1297                           ;interrupt_manager.c: 67: {
  1298                           
  1299                           ;interrupt_manager.c: 65: }
  1300                           
  1301  0016  087A               	movf	??_INTERRUPT_InterruptManager,w
  1302  0017  0020               	movlb	0	; select bank0
  1303  0018  00FF               	movwf	127
  1304  0019  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1305  001A  0009               	retfie
  1306  001B                     __end_of_INTERRUPT_InterruptManager:	
  1307                           
  1308                           	psect	text8
  1309  00AE                     __ptext8:	
  1310 ;; *************** function _TMR2_ISR *****************
  1311 ;; Defined at:
  1312 ;;		line 94 in file "mcc_generated_files/tmr2.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1
  1326 ;;      Params:         0       0       0
  1327 ;;      Locals:         0       0       0
  1328 ;;      Temps:          0       0       0
  1329 ;;      Totals:         0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    2
  1333 ;; This function calls:
  1334 ;;		_TMR2_CallBack
  1335 ;;		_TMR2_LoadPeriodRegister
  1336 ;; This function is called by:
  1337 ;;		_INTERRUPT_InterruptManager
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _TMR2_ISR
  1343  00AE                     _TMR2_ISR:	
  1344                           
  1345                           ;tmr2.c: 95: static volatile unsigned int CountCallBack = 0;
  1346                           ;tmr2.c: 98: PIR1bits.TMR2IF = 0;
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  1350  00AE  0020               	movlb	0	; select bank0
  1351  00AF  1091               	bcf	17,1	;volatile
  1352                           
  1353                           ;tmr2.c: 99: TMR2_LoadPeriodRegister(222);
  1354  00B0  30DE               	movlw	222
  1355  00B1  20F3               	fcall	_TMR2_LoadPeriodRegister
  1356                           
  1357                           ;tmr2.c: 102: if (++CountCallBack >= 7) {
  1358  00B2  3001               	movlw	1
  1359  00B3  07F0               	addwf	TMR2_ISR@CountCallBack,f	;volatile
  1360  00B4  3000               	movlw	0
  1361  00B5  3DF1               	addwfc	TMR2_ISR@CountCallBack+1,f	;volatile
  1362  00B6  3000               	movlw	0
  1363  00B7  0271               	subwf	TMR2_ISR@CountCallBack+1,w	;volatile
  1364  00B8  3007               	movlw	7
  1365  00B9  1903               	skipnz
  1366  00BA  0270               	subwf	TMR2_ISR@CountCallBack,w	;volatile
  1367  00BB  1C03               	skipc
  1368  00BC  0008               	return
  1369                           
  1370                           ;tmr2.c: 104: TMR2_CallBack();
  1371  00BD  20D2               	fcall	_TMR2_CallBack
  1372                           
  1373                           ;tmr2.c: 107: CountCallBack = 0;
  1374  00BE  01F0               	clrf	TMR2_ISR@CountCallBack	;volatile
  1375  00BF  01F1               	clrf	TMR2_ISR@CountCallBack+1	;volatile
  1376  00C0  0008               	return
  1377  00C1                     __end_of_TMR2_ISR:	
  1378                           
  1379                           	psect	text9
  1380  00F3                     __ptext9:	
  1381 ;; *************** function _TMR2_LoadPeriodRegister *****************
  1382 ;; Defined at:
  1383 ;;		line 90 in file "mcc_generated_files/tmr2.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  periodVal       1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  periodVal       1    0[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1
  1397 ;;      Params:         0       0       0
  1398 ;;      Locals:         1       0       0
  1399 ;;      Temps:          0       0       0
  1400 ;;      Totals:         1       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_TMR2_ISR
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _TMR2_LoadPeriodRegister
  1412  00F3                     _TMR2_LoadPeriodRegister:	
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  1416                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  1417  00F3  00F9               	movwf	TMR2_LoadPeriodRegister@periodVal
  1418                           
  1419                           ;tmr2.c: 91: PR2 = periodVal;
  1420  00F4  0879               	movf	TMR2_LoadPeriodRegister@periodVal,w
  1421  00F5  0020               	movlb	0	; select bank0
  1422  00F6  009B               	movwf	27	;volatile
  1423  00F7  0008               	return
  1424  00F8                     __end_of_TMR2_LoadPeriodRegister:	
  1425                           
  1426                           	psect	text10
  1427  00D2                     __ptext10:	
  1428 ;; *************** function _TMR2_CallBack *****************
  1429 ;; Defined at:
  1430 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, pclath, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1
  1444 ;;      Params:         0       0       0
  1445 ;;      Locals:         0       0       0
  1446 ;;      Temps:          0       0       0
  1447 ;;      Totals:         0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    1
  1451 ;; This function calls:
  1452 ;;		Absolute function
  1453 ;;		_TMR2_DefaultInterruptHandler
  1454 ;; This function is called by:
  1455 ;;		_TMR2_ISR
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           
  1460                           ;psect for function _TMR2_CallBack
  1461  00D2                     _TMR2_CallBack:	
  1462                           
  1463                           ;tmr2.c: 114: if (TMR2_InterruptHandler) {
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  1467  00D2  0020               	movlb	0	; select bank0
  1468  00D3  0820               	movf	_TMR2_InterruptHandler,w
  1469  00D4  0421               	iorwf	_TMR2_InterruptHandler+1,w
  1470  00D5  1903               	btfsc	3,2
  1471  00D6  0008               	return
  1472                           
  1473                           ;tmr2.c: 115: TMR2_InterruptHandler();
  1474  00D7  0821               	movf	_TMR2_InterruptHandler+1,w
  1475  00D8  008A               	movwf	10
  1476  00D9  0820               	movf	_TMR2_InterruptHandler,w
  1477  00DA  000A               	callw
  1478  00DB  3180               	pagesel	$
  1479  00DC  0008               	return
  1480  00DD                     __end_of_TMR2_CallBack:	
  1481                           
  1482                           	psect	text11
  1483  0030                     __ptext11:	
  1484 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  1485 ;; Defined at:
  1486 ;;		line 123 in file "mcc_generated_files/tmr2.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;		None
  1489 ;; Auto vars:     Size  Location     Type
  1490 ;;		None
  1491 ;; Return value:  Size  Location     Type
  1492 ;;                  1    wreg      void 
  1493 ;; Registers used:
  1494 ;;		wreg, status,2, status,0
  1495 ;; Tracked objects:
  1496 ;;		On entry : 0/0
  1497 ;;		On exit  : 0/0
  1498 ;;		Unchanged: 0/0
  1499 ;; Data sizes:     COMMON   BANK0   BANK1
  1500 ;;      Params:         0       0       0
  1501 ;;      Locals:         0       0       0
  1502 ;;      Temps:          0       0       0
  1503 ;;      Totals:         0       0       0
  1504 ;;Total ram usage:        0 bytes
  1505 ;; Hardware stack levels used:    1
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_TMR2_Initialize
  1510 ;;		_TMR2_CallBack
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           
  1515                           ;psect for function _TMR2_DefaultInterruptHandler
  1516  0030                     _TMR2_DefaultInterruptHandler:	
  1517                           
  1518                           ;tmr2.c: 124: static volatile unsigned int CountPiHalted = 80;
  1519                           ;tmr2.c: 125: static volatile unsigned int CountButtonPressed = 4;
  1520                           ;tmr2.c: 126: static volatile unsigned int CountBlink = 10;
  1521                           ;tmr2.c: 128: if ((RA1 && !RA0) || (!RA1 && RA0)) {
  1522                           
  1523                           ;incstack = 0
  1524                           ; Regs used in _TMR2_DefaultInterruptHandler: [wreg+status,2+status,0]
  1525  0030  0020               	movlb	0	; select bank0
  1526  0031  1C8C               	btfss	12,1	;volatile
  1527  0032  2835               	goto	i1l73
  1528  0033  1C0C               	btfss	12,0	;volatile
  1529  0034  2838               	goto	i1l807
  1530  0035                     i1l73:	
  1531  0035  1C8C               	btfss	12,1	;volatile
  1532  0036  1C0C               	btfss	12,0	;volatile
  1533  0037  284C               	goto	i1l815
  1534  0038                     i1l807:	
  1535                           
  1536                           ;tmr2.c: 129: CountBlink--;
  1537  0038  3001               	movlw	1
  1538  0039  02F5               	subwf	TMR2_DefaultInterruptHandler@CountBlink,f	;volatile
  1539  003A  3000               	movlw	0
  1540  003B  3BF6               	subwfb	TMR2_DefaultInterruptHandler@CountBlink+1,f	;volatile
  1541                           
  1542                           ;tmr2.c: 130: if (CountBlink == 8) {
  1543  003C  3008               	movlw	8
  1544  003D  0675               	xorwf	TMR2_DefaultInterruptHandler@CountBlink,w	;volatile
  1545  003E  0476               	iorwf	TMR2_DefaultInterruptHandler@CountBlink+1,w	;volatile
  1546  003F  1903               	btfsc	3,2
  1547                           
  1548                           ;tmr2.c: 131: do { LATA4 = 1; } while(0);
  1549  0040  284F               	goto	i1l83
  1550                           
  1551                           ;tmr2.c: 132: } else if (CountBlink == 0) {
  1552  0041  0875               	movf	TMR2_DefaultInterruptHandler@CountBlink,w	;volatile
  1553  0042  0476               	iorwf	TMR2_DefaultInterruptHandler@CountBlink+1,w	;volatile
  1554  0043  1D03               	btfss	3,2
  1555  0044  2851               	goto	i1l817
  1556                           
  1557                           ;tmr2.c: 133: do { LATA4 = 0; } while(0);
  1558  0045  0022               	movlb	2	; select bank2
  1559  0046  120C               	bcf	12,4	;volatile
  1560                           
  1561                           ;tmr2.c: 134: CountBlink = 10;
  1562  0047  300A               	movlw	10
  1563  0048  00F5               	movwf	TMR2_DefaultInterruptHandler@CountBlink	;volatile
  1564  0049  3000               	movlw	0
  1565  004A  00F6               	movwf	TMR2_DefaultInterruptHandler@CountBlink+1	;volatile
  1566                           
  1567                           ;tmr2.c: 135: }
  1568                           ;tmr2.c: 136: } else if (!PiHalted) {
  1569  004B  2851               	goto	i1l817
  1570  004C                     i1l815:	
  1571  004C  0873               	movf	_PiHalted,w
  1572  004D  1D03               	btfss	3,2
  1573  004E  2851               	goto	i1l817
  1574  004F                     i1l83:	
  1575                           ;tmr2.c: 137: do { LATA4 = 1; } while(0);
  1576                           
  1577  004F  0022               	movlb	2	; select bank2
  1578  0050  160C               	bsf	12,4	;volatile
  1579  0051                     i1l817:	
  1580                           
  1581                           ;tmr2.c: 138: }
  1582                           ;tmr2.c: 140: if (PiHalted) {
  1583  0051  0873               	movf	_PiHalted,w
  1584  0052  1903               	btfsc	3,2
  1585  0053  2867               	goto	i1l831
  1586                           
  1587                           ;tmr2.c: 141: if (!RA0) {
  1588  0054  0020               	movlb	0	; select bank0
  1589  0055  180C               	btfsc	12,0	;volatile
  1590  0056  2862               	goto	i1l827
  1591                           
  1592                           ;tmr2.c: 142: CountPiHalted--;
  1593  0057  3001               	movlw	1
  1594  0058  02F7               	subwf	TMR2_DefaultInterruptHandler@CountPiHalted,f	;volatile
  1595  0059  3000               	movlw	0
  1596  005A  3BF8               	subwfb	TMR2_DefaultInterruptHandler@CountPiHalted+1,f	;volatile
  1597                           
  1598                           ;tmr2.c: 143: if (CountPiHalted == 0) {
  1599  005B  0877               	movf	TMR2_DefaultInterruptHandler@CountPiHalted,w	;volatile
  1600  005C  0478               	iorwf	TMR2_DefaultInterruptHandler@CountPiHalted+1,w	;volatile
  1601  005D  1D03               	btfss	3,2
  1602  005E  2867               	goto	i1l831
  1603                           
  1604                           ;tmr2.c: 144: PowerDown = 1;
  1605  005F  01F4               	clrf	_PowerDown
  1606  0060  0AF4               	incf	_PowerDown,f
  1607                           
  1608                           ;tmr2.c: 145: }
  1609                           ;tmr2.c: 146: } else {
  1610  0061  2867               	goto	i1l831
  1611  0062                     i1l827:	
  1612                           
  1613                           ;tmr2.c: 147: PiHalted = 0;
  1614  0062  01F3               	clrf	_PiHalted
  1615                           
  1616                           ;tmr2.c: 148: CountPiHalted = 80;
  1617  0063  3050               	movlw	80
  1618  0064  00F7               	movwf	TMR2_DefaultInterruptHandler@CountPiHalted	;volatile
  1619  0065  3000               	movlw	0
  1620  0066  00F8               	movwf	TMR2_DefaultInterruptHandler@CountPiHalted+1	;volatile
  1621  0067                     i1l831:	
  1622                           
  1623                           ;tmr2.c: 149: }
  1624                           ;tmr2.c: 150: }
  1625                           ;tmr2.c: 152: if (ButtonPushed) {
  1626  0067  0872               	movf	_ButtonPushed,w
  1627  0068  1903               	btfsc	3,2
  1628  0069  0008               	return
  1629                           
  1630                           ;tmr2.c: 153: if (RA2) {
  1631  006A  0020               	movlb	0	; select bank0
  1632  006B  1D0C               	btfss	12,2	;volatile
  1633  006C  287E               	goto	i1l843
  1634                           
  1635                           ;tmr2.c: 154: CountButtonPressed--;
  1636  006D  3001               	movlw	1
  1637  006E  02A2               	subwf	TMR2_DefaultInterruptHandler@CountButtonPressed,f	;volatile
  1638  006F  3000               	movlw	0
  1639  0070  3BA3               	subwfb	TMR2_DefaultInterruptHandler@CountButtonPressed+1,f	;volatile
  1640                           
  1641                           ;tmr2.c: 155: if (CountButtonPressed == 0) {
  1642  0071  0822               	movf	TMR2_DefaultInterruptHandler@CountButtonPressed,w	;volatile
  1643  0072  0423               	iorwf	TMR2_DefaultInterruptHandler@CountButtonPressed+1,w	;volatile
  1644  0073  1D03               	btfss	3,2
  1645  0074  0008               	return
  1646                           
  1647                           ;tmr2.c: 156: do { LATA1 = 0; } while(0);
  1648  0075  0022               	movlb	2	; select bank2
  1649  0076  108C               	bcf	12,1	;volatile
  1650                           
  1651                           ;tmr2.c: 157: ButtonPushed = 0;
  1652  0077  01F2               	clrf	_ButtonPushed
  1653                           
  1654                           ;tmr2.c: 158: CountButtonPressed = 4;
  1655  0078  3004               	movlw	4
  1656  0079  0020               	movlb	0	; select bank0
  1657  007A  00A2               	movwf	TMR2_DefaultInterruptHandler@CountButtonPressed	;volatile
  1658  007B  3000               	movlw	0
  1659  007C  00A3               	movwf	TMR2_DefaultInterruptHandler@CountButtonPressed+1	;volatile
  1660                           
  1661                           ;tmr2.c: 159: }
  1662                           ;tmr2.c: 160: } else {
  1663  007D  0008               	return
  1664  007E                     i1l843:	
  1665                           
  1666                           ;tmr2.c: 161: ButtonPushed = 0;
  1667  007E  01F2               	clrf	_ButtonPushed
  1668                           
  1669                           ;tmr2.c: 162: CountButtonPressed = 4;
  1670  007F  3004               	movlw	4
  1671  0080  00A2               	movwf	TMR2_DefaultInterruptHandler@CountButtonPressed	;volatile
  1672  0081  3000               	movlw	0
  1673  0082  00A3               	movwf	TMR2_DefaultInterruptHandler@CountButtonPressed+1	;volatile
  1674  0083  0008               	return
  1675  0084                     __end_of_TMR2_DefaultInterruptHandler:	
  1676                           
  1677                           	psect	text12
  1678  0084                     __ptext12:	
  1679 ;; *************** function _PIN_MANAGER_IOC *****************
  1680 ;; Defined at:
  1681 ;;		line 66 in file "mcc_generated_files/pin_manager.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		None
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1
  1695 ;;      Params:         0       0       0
  1696 ;;      Locals:         0       0       0
  1697 ;;      Temps:          0       0       0
  1698 ;;      Totals:         0       0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_INTERRUPT_InterruptManager
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _PIN_MANAGER_IOC
  1710  0084                     _PIN_MANAGER_IOC:	
  1711                           
  1712                           ;pin_manager.c: 67: if ((IOCAP2 == 1) && (IOCAF2 == 1)) {
  1713                           
  1714                           ;incstack = 0
  1715                           ; Regs used in _PIN_MANAGER_IOC: []
  1716  0084  0027               	movlb	7	; select bank7
  1717  0085  1911               	btfsc	17,2	;volatile
  1718  0086  1D13               	btfss	19,2	;volatile
  1719  0087  2890               	goto	i1l172
  1720                           
  1721                           ;pin_manager.c: 68: if (RA0) {
  1722  0088  0020               	movlb	0	; select bank0
  1723  0089  1C0C               	btfss	12,0	;volatile
  1724  008A  288D               	goto	i1l173
  1725                           
  1726                           ;pin_manager.c: 69: ButtonPushed = 1;
  1727  008B  01F2               	clrf	_ButtonPushed
  1728  008C  0AF2               	incf	_ButtonPushed,f
  1729  008D                     i1l173:	
  1730                           
  1731                           ;pin_manager.c: 70: }
  1732                           ;pin_manager.c: 71: IOCAF2 = 0;
  1733  008D  0027               	movlb	7	; select bank7
  1734  008E  1113               	bcf	19,2	;volatile
  1735                           
  1736                           ;pin_manager.c: 72: } else if ((IOCAN0 == 1) && (IOCAF0 == 1)) {
  1737  008F  0008               	return
  1738  0090                     i1l172:	
  1739  0090  1C12               	btfss	18,0	;volatile
  1740  0091  0008               	return
  1741  0092  1C13               	btfss	19,0	;volatile
  1742  0093  0008               	return
  1743                           
  1744                           ;pin_manager.c: 73: PiHalted = 1;
  1745  0094  01F3               	clrf	_PiHalted
  1746  0095  0AF3               	incf	_PiHalted,f
  1747                           
  1748                           ;pin_manager.c: 74: do { LATA4 = 0; } while(0);
  1749  0096  0022               	movlb	2	; select bank2
  1750  0097  120C               	bcf	12,4	;volatile
  1751                           
  1752                           ;pin_manager.c: 75: IOCAF0 = 0;
  1753  0098  0027               	movlb	7	; select bank7
  1754  0099  1013               	bcf	19,0	;volatile
  1755  009A  0008               	return
  1756  009B                     __end_of_PIN_MANAGER_IOC:	
  1757  007E                     btemp	set	126	;btemp
  1758  007E                     int$flags	set	126
  1759  007E                     wtemp	set	126
  1760  007E                     wtemp0	set	126
  1761  0080                     wtemp1	set	128
  1762  0082                     wtemp2	set	130
  1763  0084                     wtemp3	set	132
  1764  0086                     wtemp4	set	134
  1765  0088                     wtemp5	set	136
  1766  007F                     wtemp6	set	127
  1767  007E                     ttemp	set	126
  1768  007E                     ttemp0	set	126
  1769  0081                     ttemp1	set	129
  1770  0084                     ttemp2	set	132
  1771  0087                     ttemp3	set	135
  1772  007F                     ttemp4	set	127
  1773  007E                     ltemp	set	126
  1774  007E                     ltemp0	set	126
  1775  0082                     ltemp1	set	130
  1776  0086                     ltemp2	set	134
  1777  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         5
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      11
    BANK0            80      2       6
    BANK1            32      0       0

Pointer List with Targets:

    TMR2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_ISR->_TMR2_LoadPeriodRegister

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      96
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      96
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      96
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0      15
                                              1 COMMON     1     1      0
                    _PIN_MANAGER_IOC
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0      15
                      _TMR2_CallBack
            _TMR2_LoadPeriodRegister
 ---------------------------------------------------------------------------------
 (6) _TMR2_LoadPeriodRegister                              1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _TMR2_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
     _TMR2_LoadPeriodRegister

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      2       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      11       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      11       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Apr 23 23:09:23 2016

              __end_of_TMR2_SetInterruptHandler 00ED                                     __CFG_CP$OFF 0000  
     TMR2_DefaultInterruptHandler@CountPiHalted 0077                                             l200 00E6  
                                           l917 00E0                                             _RA0 0060  
                                           _RA1 0061                                             _RA2 0062  
                                           _PR2 001B                                    __CFG_CPD$OFF 0000  
                               _TMR2_Initialize 00C1                                    __CFG_BORV$LO 0000  
                                  __CFG_IESO$ON 0000                                    __CFG_LVP$OFF 0000  
                                          _LATA 010C                                            i1l73 0035  
                                          i1l83 004F                                            _TMR2 001A  
TMR2_DefaultInterruptHandler@CountButtonPressed 0022                                            _WPUA 020C  
                                  __CFG_WRT$OFF 0000                                   __CFG_FCMEN$ON 0000  
                                          _main 00DD                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                                            ltemp 007E  
                                          start 001B                                            ttemp 007E  
                                          wtemp 007E                                   __CFG_PLLEN$ON 0000  
                __size_of_OSCILLATOR_Initialize 0006                   __end_of_OSCILLATOR_Initialize 00F3  
                                         ?_main 0079                                   __CFG_WDTE$OFF 0000  
                                         _T2CON 001C                                           _LATA1 0861  
                                         _LATA4 0864                                           _LATA5 0865  
                                         i1l110 0011                                           i1l114 0016  
                                         i1l172 0090                                           i1l173 008D  
                                         i1l831 0067                                           i1l815 004C  
                                         i1l807 0038                                           i1l817 0051  
                                         i1l843 007E                                           i1l827 0062  
                                         _TRISA 008C                                __end_of_TMR2_ISR 00C1  
                       __end_of_PIN_MANAGER_IOC 009B                                           pclath 000A  
                                         ltemp0 007E                                           ltemp1 0082  
                                         ltemp2 0086                                           ltemp3 0080  
                                         ttemp0 007E                                           ttemp1 0081  
                                         ttemp2 0084                                           ttemp3 0087  
                                         ttemp4 007F                                           status 0003  
                                         wtemp0 007E                                           wtemp1 0080  
                                         wtemp2 0082                                           wtemp3 0084  
                                         wtemp4 0086                                           wtemp5 0088  
                                         wtemp6 007F                                 _TMR2_StartTimer 0100  
              __size_of_TMR2_LoadPeriodRegister 0005                                  __CFG_MCLRE$OFF 0000  
                               __initialization 001C                                    __end_of_main 00E7  
                       __end_of_TMR2_Initialize 00D2                     ?_INTERRUPT_InterruptManager 0079  
                      _TMR2_SetInterruptHandler 00E7                                          ??_main 007B  
                                        _APFCON 011D                                          _ANSELA 018C  
                                        _IOCAF0 1C98                                          _IOCAF2 1C9A  
                                        _IOCAN0 1C90                                          _IOCAP2 1C8A  
                                        _OSCCON 0099                                  __CFG_PWRTE$OFF 0000  
                                __CFG_STVREN$ON 0000                                    __pdataCOMMON 0075  
                       __end_of_TMR2_StartTimer 0103        TMR2_SetInterruptHandler@InterruptHandler 0024  
                              ?_PIN_MANAGER_IOC 0079                               _SYSTEM_Initialize 00FC  
        TMR2_DefaultInterruptHandler@CountBlink 0075                         __end_of__initialization 002D  
                         __end_of_TMR2_CallBack 00DD                              ?_SYSTEM_Initialize 0079  
                                __pcstackCOMMON 0079                                    __pidataBANK0 0103  
                           ??_SYSTEM_Initialize 007B                                       ?_TMR2_ISR 0079  
                              ?_TMR2_Initialize 0079                                  _OPTION_REGbits 0095  
                     __end_of_SYSTEM_Initialize 0100                         _TMR2_LoadPeriodRegister 00F3  
                                    __pmaintext 00DD                                      ??_TMR2_ISR 007A  
                                    __pintentry 0004                                         _OSCSTAT 009A  
                                       _OSCTUNE 0098                                ?_TMR2_StartTimer 0079  
                    ??_TMR2_SetInterruptHandler 007B                                         __ptext1 00FC  
                                       __ptext2 00C1                                         __ptext3 0100  
                                       __ptext4 00E7                                         __ptext5 009B  
                                       __ptext6 00ED                                         __ptext8 00AE  
                                       __ptext9 00F3                           _OSCILLATOR_Initialize 00ED  
                                     _T2CONbits 001C                        ??_PIN_MANAGER_Initialize 007B  
                     ??_TMR2_LoadPeriodRegister 0079                      __size_of_SYSTEM_Initialize 0004  
                          end_of_initialization 002D                                __CFG_FOSC$INTOSC 0000  
          __end_of_TMR2_DefaultInterruptHandler 0084           __size_of_TMR2_DefaultInterruptHandler 0054  
                  _TMR2_DefaultInterruptHandler 0030                                   __pidataCOMMON 00F8  
                             __size_of_TMR2_ISR 0013                          ?_OSCILLATOR_Initialize 0079  
              TMR2_LoadPeriodRegister@periodVal 0079                             start_initialization 001C  
               __size_of_PIN_MANAGER_Initialize 0013                                    _ButtonPushed 0072  
                      __size_of_PIN_MANAGER_IOC 0017                                       _PowerDown 0074  
                                   __pdataBANK0 0022                   ?_TMR2_DefaultInterruptHandler 0079  
                        __size_of_TMR2_CallBack 000B                                     __pbssCOMMON 0070  
                                     ___latbits 0000                                   __pcstackBANK0 0024  
                      __size_of_TMR2_Initialize 0011                                       __pnvBANK0 0020  
                        _PIN_MANAGER_Initialize 009B                    ??_INTERRUPT_InterruptManager 007A  
                                 _TMR2_CallBack 00D2                                        _PIE1bits 0091  
                      __size_of_TMR2_StartTimer 0003             __size_of_INTERRUPT_InterruptManager 0017  
                                      _PIR1bits 0011                                        _TMR2_ISR 00AE  
                             ??_PIN_MANAGER_IOC 0079                  ??_TMR2_DefaultInterruptHandler 0079  
             __size_of_TMR2_SetInterruptHandler 0006                       ?_TMR2_SetInterruptHandler 0024  
                                      _PiHalted 0073                               ??_TMR2_Initialize 007B  
                                ?_TMR2_CallBack 0079                         ??_OSCILLATOR_Initialize 007B  
                      ?_TMR2_LoadPeriodRegister 0079                                        __ptext10 00D2  
                                      __ptext11 0030                                        __ptext12 0084  
                                 __size_of_main 000A                                        int$flags 007E  
                             ??_TMR2_StartTimer 007B              __end_of_INTERRUPT_InterruptManager 001B  
                    _INTERRUPT_InterruptManager 0004                                      _INTCONbits 000B  
                                      intlevel1 0000                                 ??_TMR2_CallBack 0079  
                       ?_PIN_MANAGER_Initialize 0079                               __CFG_CLKOUTEN$OFF 0000  
               __end_of_TMR2_LoadPeriodRegister 00F8                           TMR2_ISR@CountCallBack 0070  
                __end_of_PIN_MANAGER_Initialize 00AE                                 _PIN_MANAGER_IOC 0084  
                         _TMR2_InterruptHandler 0020  
